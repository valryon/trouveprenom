@model SearchViewModel

<div class="content">
    <h2>Recherche avancée</h2>
</div>

<div class="content">
    <form class="pure-form pure-form-stacked" action="@Url.Action("Search", "Home")" method="get">
        <fieldset>
            <legend>Critères de recherche</legend>

            <div class="pure-g">
                <div class="pure-u-1 pure-u-md-1-2">
                    <label for="minYear">Entre</label>
                    <input type="number" name="minYear" value="@Model.Criteria.MinYear" />
                </div>
                <div class="pure-u-1 pure-u-md-1-2">
                    <label for="maxYear"> et </label>
                    <input type="number" name="maxYear" value="@Model.Criteria.MaxYear" />
                </div>
                <div class="pure-u-1 pure-u-md-1-2">
                    <label for="minOccurences">
                        occurences min
                    </label>
                    <input type="number" name="minOccurences" value="@(Model.Criteria.MinOccurences >= 0 ? @Model.Criteria.MinOccurences.ToString() : "")" />
                </div>
                <div class="pure-u-1 pure-u-md-1-2">
                    <label for="maxOccurences">
                        occurences max
                    </label>
                    <input type="number" name="maxOccurences" value="@(Model.Criteria.MaxOccurences >= 0 ? @Model.Criteria.MaxOccurences.ToString() : "")" />
                </div>
                <div class="pure-u-1 pure-u-md-1-2">
                    <label for="sex">
                        sexe
                    </label>
                    <select name="sex">
                        <!option value="0" @(Model.Sex <= 0 ? "selected" : "")>Tous</!option>
                        <!option value="@Prenom.BOY" @(Model.Sex == Prenom.BOY ? "selected" : "")>Garçon</!option>
                        <!option value="@Prenom.GIRL" @(Model.Sex == Prenom.GIRL ? "selected" : "")>Fille</!option>
                    </select>
                </div>
            </div>

            <button type="submit" class="pure-button pure-button-primary">Rechercher</button>
        </fieldset>
    </form>
</div>

<div class="content">
    <h3>Résultats - @Model.Results.Length prénom@(Model.Results.Length > 1 ? "s" : "") (@Model.TotalCount résultats en tout) </h3>
    <p>
        Tri par nombre d'occurences décroissants sur la période indiquée. Cliquez sur un prénom pour avoir un détail plus visible.
    </p>
    <div class="pure-g">
        @foreach (var g in Model.Results)
        {
            <div class="pure-u-1 pure-u-md-1-2 pure-u-lg-1-3">
                @Html.Partial("_PrenomWidget", g)
            </div>
        }
    </div>
</div><div class="content pagination">
    <div class="pure-g">
        <div class="pure-u-1-3 pagination-left">
            @if (Model.Page > 1)
            {
                <a class="button button-secondary pure-button" href="@Url.Action("Search", "Home", Model.GetPagination(-1))">
                    &laquo;&nbsp;@(Model.Page - 1)
                </a>
            }
        </div>
        <div class="pure-u-1-3">
            <a class="pure-button" href="#">@Model.Page</a>
        </div>
        <div class="pure-u-1-3 pagination-right">
            @if (Model.Page < Model.TotalPages)
            {
                <a class="button button-secondary pure-button" href="@Url.Action("Search", "Home", Model.GetPagination(+1))">
                    @(Model.Page + 1)&nbsp;&raquo;
                </a>
            }
        </div>
    </div>
</div>
